name: Build

on:
  workflow_call:
    inputs:
      ref:
        description: Git commit to build.
        required: false
        type: string
      package_folder_artifact:
        description: "Whether to upload the Unity package folder artifact."
        required: false
        default: false
        type: boolean

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_xcframework:
    name: Build XCFramework
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - name: Install dependencies
        run: |
          gem install xcpretty
      - name: Build xcframework
        run: |
          make build_ios_dependencies
      - name: Upload xcframework artifact
        uses: actions/upload-artifact@v4
        with:
          name: EmbraceUnityiOS.xcframework
          path: build/EmbraceUnityiOS.xcframework
          retention-days: 1
  build_unity_package:
    name: Build Unity package
    needs:
      - build_xcframework
    runs-on: ubuntu-22.04
    env:
      # These environment variables are defined by the `make github_env_vars`
      # command below, but are defined here to satisfy the linter.
      BUILD_METHOD: # C# method to call in the Unity project to build the .unitypackage.
      BUILD_PROJECT: # Path to the Unity project to build.
      GAMECI_UNITYPACKAGE: # Path to the file output by game-ci/unity-builder.
      UNITY_VERSION: # Unity version to use.
      UNITY_SDK_VERSION: # Embrace Unity SDK version to build.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - name: Fetch iOS dependencies
        uses: actions/download-artifact@v4
        with:
          name: EmbraceUnityiOS.xcframework
          path: build/EmbraceUnityiOS.xcframework
      # Passing the Embrace Apple SDK xcframework files from the previous job
      # inflates the size of the artifact quite a bit, so just download it again
      # instead. We need to touch the files in the build folder afterwards so
      # the install step doesn't try to rebuild the Unity xcframework.
      - name: Install iOS dependencies
        run: |
          make download_apple_sdk
          # Touch the files again so the install step doesn't try to rebuild
          # the Unity xcframework.
          touch build/*
          make install_ios_dependencies
      - name: Set build environment variables
        run: |
          make github_env_vars | tee -a $GITHUB_ENV
      - name: Cache Library folder
        uses: actions/cache@v4
        with:
          path: ${{ env.BUILD_PROJECT }}/Library
          key: Library-${{ env.UNITY_VERSION }}
      - name: Build .unitypackage
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: ${{ env.BUILD_PROJECT }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: Android
          customImage: "unityci/editor:ubuntu-${{ env.UNITY_VERSION }}-android-3.1.0"
          customParameters: -buildTarget Android
          versioning: None
          buildMethod: ${{ env.BUILD_METHOD }}
      - name: Upload package folder artifact
        if: ${{ inputs.package_folder_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: io_embrace_sdk_${{ env.UNITY_SDK_VERSION }}
          path: io.embrace.sdk
          if-no-files-found: error
          retention-days: 1
      - name: Upload unitypackage artifact
        uses: actions/upload-artifact@v4
        with:
          name: EmbraceSDK_${{ env.UNITY_SDK_VERSION }}.unitypackage
          path: ${{ env.GAMECI_UNITYPACKAGE }}
          if-no-files-found: error
          retention-days: 1
