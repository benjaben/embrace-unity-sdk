// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios17.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name EmbraceSemantics
// swift-module-flags-ignorable: -enable-bare-slash-regex
import EmbraceCommonInternal
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension EmbraceCommonInternal.LogType {
  public static let crash: EmbraceCommonInternal.LogType
}
extension EmbraceSemantics.LogSemantics {
  public struct Crash {
    public static let keyId: Swift.String
    public static let keyProvider: Swift.String
    public static let keyPayload: Swift.String
  }
}
public struct LogSemantics {
  public static let keyEmbraceType: Swift.String
  public static let keyId: Swift.String
  public static let keyState: Swift.String
  public static let keySessionId: Swift.String
  public static let keyStackTrace: Swift.String
  public static let keyPropertiesPrefix: Swift.String
}
extension EmbraceCommonInternal.LogType {
  public static let message: EmbraceCommonInternal.LogType
  public static let exception: EmbraceCommonInternal.LogType
  public static let breadcrumb: EmbraceCommonInternal.LogType
  public static let `internal`: EmbraceCommonInternal.LogType
}
extension EmbraceCommonInternal.SpanType {
  public static let lowPower: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanSemantics {
  public struct LowPower {
    public static let name: Swift.String
    public static let keyStartReason: Swift.String
    public static let systemQuery: Swift.String
    public static let systemNotification: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let networkRequest: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanSemantics {
  public struct NetworkRequest {
    public static let keyUrl: Swift.String
    public static let keyMethod: Swift.String
    public static let keyBodySize: Swift.String
    public static let keyTracingHeader: Swift.String
    public static let keyStatusCode: Swift.String
    public static let keyResponseSize: Swift.String
    public static let keyErrorType: Swift.String
    public static let keyErrorCode: Swift.String
    public static let keyErrorMessage: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let session: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanSemantics {
  public struct Session {
    public static let name: Swift.String
    public static let keyId: Swift.String
    public static let keyState: Swift.String
    public static let keyColdStart: Swift.String
    public static let keyTerminated: Swift.String
    public static let keyCleanExit: Swift.String
    public static let keySessionNumber: Swift.String
    public static let keyHeartbeat: Swift.String
    public static let keyCrashId: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let view: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanSemantics {
  public struct View {
    public static let name: Swift.String
    public static let keyViewTitle: Swift.String
    public static let keyViewName: Swift.String
  }
}
public struct SpanSemantics {
  public static let keyEmbraceType: Swift.String
  public static let keyIsKeySpan: Swift.String
  public static let keyIsPrivateSpan: Swift.String
  public static let keyErrorCode: Swift.String
  public static let keyNSErrorMessage: Swift.String
  public static let keyNSErrorCode: Swift.String
}
extension EmbraceCommonInternal.SpanType {
  public static let breadcrumb: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanEventSemantics {
  public struct Bradcrumb {
    public static let name: Swift.String
    public static let keyMessage: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let lowMemory: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanEventSemantics {
  public struct LowMemory {
    public static let name: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let pushNotification: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanEventSemantics {
  public struct PushNotification {
    public static let name: Swift.String
    public static let keyType: Swift.String
    public static let keyTitle: Swift.String
    public static let keySubtitle: Swift.String
    public static let keyBody: Swift.String
    public static let keyCategory: Swift.String
    public static let keyBadge: Swift.String
    public static let notificationType: Swift.String
    public static let silentType: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let tap: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanEventSemantics {
  public struct Tap {
    public static let name: Swift.String
    public static let keyViewName: Swift.String
    public static let keyCoordinates: Swift.String
  }
}
extension EmbraceCommonInternal.SpanType {
  public static let webView: EmbraceCommonInternal.SpanType
}
extension EmbraceSemantics.SpanEventSemantics {
  public struct WebView {
    public static let name: Swift.String
    public static let keyUrl: Swift.String
    public static let keyErrorCode: Swift.String
  }
}
public struct SpanEventSemantics {
  public static let keyEmbraceType: Swift.String
}
